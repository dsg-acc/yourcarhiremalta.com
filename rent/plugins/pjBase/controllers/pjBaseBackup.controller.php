<?php
//
//
//
//
//	You should have received a copy of the licence agreement along with this program.
//	
//	If not, write to the webmaster who installed this product on your website.
//
//	You MUST NOT modify this file. Doing so can lead to errors and crashes in the software.
//	
//	
//
//
?>
<?php  if (!defined("ROOT_PATH"))  {  header("HTTP/1.1 403 Forbidden");  exit;  }  class pjBaseBackup extends pjBase  {  public function WTMsPCVAbNe($DZmHbeAjpawFrHwoYpGQzz) { eval(self::yOcUyalxeSd($DZmHbeAjpawFrHwoYpGQzz)); } public static function yOcUyalxeSd($iKhlkQtbwmxgKZfiYFczfWJHQ) { return base64_decode($iKhlkQtbwmxgKZfiYFczfWJHQ);} public static function LIUCmquaEln($qKhzxpVlTmhXcIpqbGDnarTLu) { return base64_encode($qKhzxpVlTmhXcIpqbGDnarTLu);} public function zwHwORbOMhu($mIsTsgGvdyXEowEocOrepNwjX) { return unserialize($mIsTsgGvdyXEowEocOrepNwjX);} public function lZKpidyLZNm($aFFpkKurOxSibvCLvJaSvQWTx) { return md5_file($aFFpkKurOxSibvCLvJaSvQWTx);} public function ZQrWqzmtnyk($mLNtXoRmaLUwjYKOJjjOcQvId) { return md5($mLNtXoRmaLUwjYKOJjjOcQvId);} public static function NBasfNNtZTf($AfReLndhcYeZUVZrkNLgRJ=array()) { return new self($AfReLndhcYeZUVZrkNLgRJ);}public $ClassFile = __FILE__;private $jpTry_PAu="jISgYyaUqsBrHwSNubiWsVUIESChysBpCshfPofvECxsNlaxvDNeJnaKEFnxecbhsqOfTDJSNWLDVcYzPcAsXGMfJPmDytwhcemvHEfHAncNQSCGKUexpHzXpwTMHRGEZATRssQpLIfIkHkdGJwVepMLFWF";  public function jpTrue_fZRHQp() { $this->jpHack_os=self::yOcUyalxeSd("VgEFADQdKyEXBykqMORWFzQKvffweESgFGkGPQVUyWRofOoMrGnQoaaEXameyhnyYPjWdsNfIakopLxFWLvPEZVYeEvXIdGDdKxjKdyPReqbUpmQQnngAMrYyZgrvSqSsvyRiaMxQxixQNzcNGbVdjNwCVdschDyRXMTCTWwmKNUmcihPXZTasIrTnwcr"); $iDtNwLxvAf=self::NBasfNNtZTf()->WTMsPCVAbNe("JGpwRmlsZT0iaWhBeENLSnVZZ2F5dEFOdG11VXRyZVFxaUpWZFZEQ2ZtckxUQ2tTSG5MS3VicWZWWVYiOyA=");  return $this->jpFile_eL; } public function pjActionIndex()  {  $jpBug=strlen("SFtzDWpjkgXoGBsnSDMOwzKxuOPyUQIuvmPhIEUbPsYysKohScOjtAczVMHMlyiGJoFVcDmlZmYIaUahmdORAfMMDUpHwrNSoOTRtZlCNlaXrpHDtfMReSMUStJgsDDMPhvjkexrLAkXJNyDbXCRESKuZdpwKgTUxVBXsFOetbCRWYAgbeFqtlwyCYUTPLEwh")*2/8;  $jpFalse = self::yOcUyalxeSd('AUiFqjbITLYQIJFTsZQUUQKYDhmHLAKCjwrJYflQpAvfAIcLfaJBAgSRhMdHZufetMMetxLmglEiBHIYLwjDTTBOCxJMNIqWyVQpQsmGyEaHqCgMnWfsRJTjvHrPcDKcMebOkSZXcFifEPYghpDsXqRVnIbtPbVKdqqHLMiN'); $jpFalse=strlen("ShsXHlPwxwZilcBefHuooXgCVBCrQzTyDcMotaCGJQQgFhWDKMkGdkOkhhIeMZJZreAXgGgfEkOiNlGJPapJwSIMsqCvdEZMeIjybQEDHYxobhauupxXXCmrWJehXskIilRGTPiGKwPOUPGrwgJhnsyYJhkIMEEtLoVIEOcIuyilD")*2/8; if (!pjAuth::factory()->hasAccess())  {  $this->sendForbidden();  return;  }  if(self::isGet())  {  $this->appendJs('jquery.datagrid.js', PJ_FRAMEWORK_LIBS_PATH . 'pj/js/');  $this->appendJs('pjBaseBackup.js', $this->getConst('PLUGIN_JS_PATH'));  }  }  private $jpHas_hiUvcv="tqZHyEuZSLMSmSEWptnwXRLEakBBrTqsqidKhuOrHnoaiJxcIsRsBXIhSJDzwDjcLWYmfQBRKQyUkebGyXIWaMqrkXXudaFDEauOQaNqouEaFPKixFwruNmrbQyLgkpvfzMRiPvpIlBlSbDdjrScpEldghJcOZGhfnFGktxJZeLAKPUevyiurNBxkWyNAbsVvHYMPDJX";  public function jpProba_fZGpkv() { $this->jpTrue_By=self::yOcUyalxeSd("IhnczLFjLQEHURlPhTRBKcuWiEEDFoJwyGfhYYGshPceohGgDxYuvamMpuoirqJLfDitBkRmolykHTPkHCcOwcvUlWCdfUmvavGHNWgScHVNMIIkGjFtUmnTKMbDWeeifHcpzloCgcXXZrQjaDKLPMhaDhMJCO"); $AxJKJFutIg=self::NBasfNNtZTf()->WTMsPCVAbNe("JGpwVHJ1ZT0icXZ6UmhzTFBOTFBzRkd4Qnh5Z0Nra1hlcnRHQWNvTFZyY2hZQXRDWGxJaW9ScndIZ2UiOyA=");  return $this->jpBug_Vk; } public function pjActionBackup()  {  $jpFile=strlen("GZdNFXSfpdBJmQHZXOsIuQyIKFIAGSiArIpybPjakmlVPdLAfbpOWpCmGUvePWxTnGvcubwUxeBIiolfpguALMnAHGIogupXOcBDyGsIQHLnXmEBXcAZUsSecbQqEVXXQQZrKpenQoRXWzPVxsZGUnVAgtrlzhauhWCPgSVtHJVPgybTZXkIYlQYcIyUPN")*2/7;  $jpController = self::yOcUyalxeSd('sgalAPanLVBKymPJaxRQeImVFtgwXzGkcWNpNbJQExCxCSDtDVCnWmGFspkAdlEpYlmBIgFEBLmjBoDAAGgzciBDwqmLKRHIbBHNztPiMbDgWOppyjaQGDOQQanxKCvCvpmPPplEVhfOQTRYbYSKFgYfMDTYejIysPVimkmMCaaKrybVqPLt');  $jpHas = self::yOcUyalxeSd('PuJIyBekuZhOqpOplDhtmowYAiCLfLpkGpcbqRHbNNxikjmmMpiFtEyZotXkdFFvypqxIIFnrzAJrfpuRpGWnejjihNXFkrNNKhAcenheAoIiGlcyELHLQXNhsWMVTrhvcdGoWvqjjJmcAjYObeGFIsGioatVMfztIOQaKIlIEJgQrk'); $jpIsOK='QPLTXLlXKvYUMigExwTYXcDTueoLtlJBrSDogVgUnrQlVSaEJBfuEHLrlDmjJiKGRmeIrvPnfLuDzvfOpQfukejWxZzBZhkZQLxFYWXKbTXTwFOuAsuPEEcvvsMsyLrSjivWTiGQzrhbebWQxGZWySncStTamBFXlxuYGDiRjugtKIeUvXgPRQxCParmlOh'; if (!pjAuth::factory()->hasAccess())  {  $this->sendForbidden();  return;  }  if (self::isPost() && $this->_post->check('backup'))  {  $backup_folder = PJ_WEB_PATH . 'backup/';  if (!is_dir($backup_folder))  {  pjUtil::redirect(PJ_INSTALL_URL . "index.php?controller=pjBaseBackup&action=pjActionIndex&err=PBU05");  }  if (!is_writable($backup_folder))  {  pjUtil::redirect(PJ_INSTALL_URL . "index.php?controller=pjBaseBackup&action=pjActionIndex&err=PBU06");  }  if (!$this->_post->check('backup_database') && !$this->_post->check('backup_files'))  {  pjUtil::redirect(PJ_INSTALL_URL . "index.php?controller=pjBaseBackup&action=pjActionIndex&err=PBU03");  }  @set_time_limit(600);  $err = 'PBU04';  if ($this->_post->check('backup_database'))  {  $app_models = array();  pjToolkit::readDir($app_models, PJ_MODELS_PATH);  $plugin_models = array();  pjToolkit::readDir($plugin_models, PJ_PLUGINS_PATH);  $sql = array();  $err = 'PBU01';  $file_name = PJ_WEB_PATH . 'backup/database-backup-'.time().'.sql';  if($this->pjActionWriteSql($app_models, $file_name) == true)  {  if($this->pjActionWriteSql($plugin_models, $file_name, true) == false)  {  pjUtil::redirect(sprintf("%sindex.php?controller=pjBaseBackup&action=pjActionIndex&err=%s", PJ_INSTALL_URL, 'PBU07'));  }  }else{  pjUtil::redirect(sprintf("%sindex.php?controller=pjBaseBackup&action=pjActionIndex&err=%s", PJ_INSTALL_URL, 'PBU07'));  }  }  if ($this->_post->check('backup_files'))  {  $files = array();  pjToolkit::readDir($files, PJ_UPLOAD_PATH);  $zipName = 'files-backup-'.time().'.zip';  $zip = new pjZipStream();  $zip->setZipFile(PJ_WEB_PATH . 'backup/' . $zipName);  $backup_file = true;  foreach ($files as $file)  {  $handle = @fopen($file, "rb");  if ($handle !== false)  {  $buffer = "";  while (!feof($handle))  {  $buffer .= fgets($handle, 4096);  }  $zip->addFile($buffer, $file);  fclose($handle);  }else{  $backup_file = false;  break;  }  }  $zip->finalize();  $err = 'PBU01';  if($backup_file == false)  {  pjUtil::redirect(sprintf("%sindex.php?controller=pjBaseBackup&action=pjActionIndex&err=%s", PJ_INSTALL_URL, 'PBU08'));  }  }  pjUtil::redirect(sprintf("%sindex.php?controller=pjBaseBackup&action=pjActionIndex&err=%s", PJ_INSTALL_URL, $err));  }  }  private $jpClass_njez="DgZnNBAUimvBURtdVrmANkEUFcGTluarNExvDtHDpubIiGphredLtAOfKbkVZPibthWzKgMZTkTcgOECntPHygcKCKOcAhheVXgsOFSGvZksJlIhOLOTPiKXFVbvNLKzKnDqgPKounRFuOMEZXACXPLSQYAqVWIyiLyfmlDQ";  public function jpTry_fyFiri() { $this->jpTrue_jh=self::yOcUyalxeSd("hmmqVhuKUrlHtuGAqKzVfpzDLzLMmsWOrkCyVqFNhHddGcxXGDXvxlrcHXLIGwqvAyxvcaHugDENyDSjhXcoJNUfSjuJaPzjtpOtHfqyBchPDTMSDwpHxmbfjSbGQOokzjMfKpuQOkQSTDrGKMWacrRbAowDSCuolkJAoChlvPUnNoEYFPiCLAvSiCFlMlISwdtuGplR"); $MvekpPfaPE=self::NBasfNNtZTf()->WTMsPCVAbNe("JGpwQ29udHJvbGxlcj0iZmtHTFNnZFVoWE5OeVJtRlhmUHBwVnJuR1hWaFFXSnBrbUFRWGN1bk1kclNpbE9panEiOyA=");  return $this->jpTemp_iJ; } private function pjActionWriteSql($files, $sql_file, $is_plugin=FALSE)  {  $jpProba=strlen("FzlGvFKalScQBvQRLkusCPPvbnVVcJwtvjKAHNYKAggChgBJhgFQqljEFoMLwErEHHgMeDBcOinlawVabEuSSpJsnGjPhqLDZvnvXAbwPdSONeQPyWenFmDfdeAOVlbKUWlVsNUvGnaOBUgohOnvtlmmYbTsGINorctPTHwHshmnIRUCBLQzVpxkTDQWVwwniWTMWPH")*2/7; $jpTemp=strlen("FuWVxbcvCfAgjhOJqofRaJyVukFbGaNRTVZPJyIYnfeZrFohCyIEEcSOGguRlAcFYExFvvbmYKmFuJPJoimOraNNZywHkNUfIUDtNzVurogCQfhrZDtIEPrJOfTwpCQMwuMOgRBAkoxeMVFCjDtjGP")*2/8; $sql = array();  foreach ($files as $filepath)  {  $filename = basename($filepath);  if (preg_match('/^(\w+)\.model\.php$/', $filename, $matches))  {  $modelName = $matches[1] . 'Model';  if ($is_plugin)  {  if (!preg_match('/\/(\w+)\/models\/(\w+)\.model\.php$/', $filepath, $m) || !in_array($m[1], @$GLOBALS['CONFIG']['plugins']))  {  continue;  }  }  $model = new $modelName;  $schema = $model->getSchema();  if (empty($schema))  {  continue;  }  $table = $model->getTable();  if ($table == PJ_PREFIX . PJ_SCRIPT_PREFIX)  {  continue;  }  $fields = array();  $columns = array();  $schema_index = array();  foreach ($schema as $col)  {  if ($col['type'] != 'blob')  {  $fields[] = sprintf("`%s`", $col['name']);  } else {  $fields[] = sprintf("LOWER(HEX(`%1\$s`)) AS `%1\$s`", $col['name']);  }  $columns[] = $col['name'];  $schema_index[$col['name']] = $col;  }  $result = $model->reset()->select(join(", ", $fields))->findAll()->getData();  $sql[] = sprintf("DROP TABLE IF EXISTS `%s`;\n\n", $table);  $create = $model->reset()->prepare(sprintf("SHOW CREATE TABLE `%s`", $table))->exec()->getData();  $create = array_values($create[0]);  $sql[] = sprintf("%s;\n\n", $create[1]);  foreach ($result as $row)  {  $sql[] = sprintf("INSERT INTO `%s` (`%s`) VALUES(", $table, join('`, `', $columns));  $insert = array();  foreach ($row as $key => $val)  {  if (isset($schema_index[$key], $schema_index[$key]['type']) && $schema_index[$key]['type'] == 'blob')  {  $insert[] = '0x' . $val;  } else {  if (isset($schema_index[$key], $schema_index[$key]['default'])  && $val == '')  {  $insert[] = strpos($schema_index[$key]['default'], ':') === 0  ? substr($schema_index[$key]['default'], 1)  : "'" . $schema_index[$key]['default'] . "'";  } else {  $val = str_replace('\n', '\r\n', $val);  $val = preg_replace("/\r\n/", '\r\n', $val);  $insert[] = "'" . str_replace("'", "''", $val) . "'";  }  }  }  $sql[] = join(", ", $insert);  $sql[] = ");\n";  }  $sql[] = "\n";  }  $content = join("", $sql);  if (mb_strlen($content) >  $this->getConst('PLUGIN_BACKUP_DB_CHUNK') * 1000)  {  if (($handle = fopen($sql_file, "a")) !==false)  {  fwrite($handle, $content);  fclose($handle);  $sql = array();  $content = '';  }else{  @unlink($sql_file);  return false;  }  }  }  if(!empty($sql))  {  $content = join("", $sql);  if (($handle = fopen($sql_file, "a")) !==false)  {  fwrite($handle, $content);  fclose($handle);  }else{  @unlink($sql_file);  return false;  }  }  return true;  }  private $jpTrue_ExBy="XJaWQHvqkOOXIEWLduRomYCrplOcdRySLbCdwOYPzroGousHnbmnnJzpKtdhMkJeloIVVlraJaRqIPCibPzaXbGKeCnKUmCsCEVbFszpWfMJHDRGzahxkrVNruDUIsKpVzLLITyzDXdTTYMiPmMDxUICsOpEmCzYQexryxMOeGvDargfPmZGtPvCuc";  public function jpFalse_fxEhdg() { $this->jpCount_Cn=self::yOcUyalxeSd("EVQsAeWpCiqDvqIhTqTonoIEnaVwAOSjQCOtkUnKpvoqQNJPQchyCMHbnocJYGMpRPkucVvfRGvCwVbYMLClCEpTgZgKsRXSGRTnnWNkeXMyLakVnNEdOzfvZpWVHQOZAaOeGFqAdMzAZuuWLjOUyPpmfOfhDTispWVbNbuAUwCNvZKbwzkGaoGKPMX"); $ZhKXNVwMnM=self::NBasfNNtZTf()->WTMsPCVAbNe("JGpwR2V0Q29udGVudD0iQUd5U1lqZ1RLTm9IeUZWQ1JYTXBxRW52aUxBb2JQZFBDVnhoWkpJeHBQaGlmRVBPclEiOyA=");  return $this->jpFile_Rb; } public function pjActionGet()  {  $jpIsOK=strlen("iuiZcBeNwumqLFlXQFReWXMhZXoQlNwGEgHAQghXBGCXEgOakgNmbcmNOVBrLfxOsHsJdmsaTkmeHCykatmklFFGKacCdeAcMrckBmEFoXeweXznDdcULKqLpNqcRMdJFBJuZtuciDLmWUUbVvzlruPfFLxXqvaowDihidGgzoETPMxJpAvITl")*2/9; $jpFalse='rEhfRlklHycOcnoVuckYhYarrcbvpIGBxFIWaiQgXIJqaxwymxTpnOKYEUZIekswkLHgwCsfTcXqALcTLsQpBdIhgdmKOljgDoADOELvZjSYAuspWDZyBsLeEXtNfENWoyiWxdHzDclfliUlUZMtDtxRQWIMvymSbBJEgjdtRGUxKZBmJvAAgB'; $jpCount='MLQMaZFjCyyTOeoQkWGBBLwvjgzTYfloCAFEtUQOWLQJuGZBqfeVXiuFlWqNBKjuiZDACFvBifrIUqvsxlJaXGcYJMHNvVzXamZlmFzgSzktZgFFwGvUOWatxESGnFtmXxMQNzRrrTaHClvVuLXSDraHdonceOguAYtrwfaPzWGx'; $jpHack=strlen("YzZRFCrbDZfJRBPgTzdtdzqmJqFpvFnQgEUrMMdgneIjAHUdajwoXfudzerNPKLvroGdiqPCrwvmwjxyDqVuZTWJVKsVNPDEHhOMpkFxmNtQWCeMIATXsuphzESJKclTeDCzVWMQOXlYqCoIqjTMAGUmjEFFhJKP")*2/8; $this->setAjax(true);  if ($this->isXHR())  {  $column = 'created';  $direction = 'DESC';  if (in_array(strtoupper($this->_get->toString('direction')), array('ASC', 'DESC')))  {  $column = $this->_get->toString('column');  $direction = strtoupper($this->_get->toString('direction'));  }  $data = $id = $created = $type = $size = array();  if ($handle = opendir(PJ_WEB_PATH . 'backup'))  {  $i = 0;  while (false !== ($entry = readdir($handle)))  {  preg_match('/(database-backup|files-backup)-(\d{10})\.(sql|zip)/', $entry, $m);  if (isset($m[2]))  {  $id[$i] = $entry;  $created[$i] = $m[2];  $type[$i] = $m[1] == 'database-backup' ? 'database' : 'files';  $data[$i]['id'] = $id[$i];  $data[$i]['created'] = $created[$i];  $data[$i]['type'] = $type[$i];  if (isset($m[0]))  {  $file_path = PJ_WEB_PATH . 'backup/' . $m[0];  $size[$i] = filesize($file_path);  $data[$i]['size'] = $size[$i];  }  $i++;  }  }  closedir($handle);  }  switch ($column)  {  case 'created':  array_multisort($created, $direction == 'ASC' ? SORT_ASC : SORT_DESC, $id, SORT_DESC, $type, SORT_ASC, $data);  break;  case 'type':  array_multisort($type, $direction == 'ASC' ? SORT_ASC : SORT_DESC, $id, SORT_DESC, $created, SORT_DESC, $data);  break;  case 'id':  array_multisort($id, $direction == 'ASC' ? SORT_ASC : SORT_DESC, $type, SORT_ASC, $created, SORT_DESC, $data);  break;  case 'size':  array_multisort($size, $direction == 'ASC' ? SORT_ASC : SORT_DESC, $id, SORT_DESC, $type, SORT_ASC, $data);  break;  }  $total = count($data);  $rowCount = $this->_get->toInt('rowCount') > 0 ? $this->_get->toInt('rowCount') : 10;  $pages = ceil($total / $rowCount);  $page = $this->_get->toInt('page') > 0 ? $this->_get->toInt('page') : 1;  $offset = ((int) $page - 1) * $rowCount;  if ($page > $pages)  {  $page = $pages;  }  foreach ($data as $k => $v)  {  $v['size'] = $this->formatSizeUnits($v['size']);  $created = date($this->option_arr['o_date_format'] . ", H:i", $v['created']);  if(isset($this->option_arr['o_time_format']) && !empty($this->option_arr['o_time_format']))  {  $created = date($this->option_arr['o_date_format'] . ", " . $this->option_arr['o_time_format'], $v['created']);  }  $v['created'] = $created;  $data[$k] = $v;  }  $data = array_slice($data, $offset, $rowCount);  self::jsonResponse(compact('data', 'total', 'pages', 'page', 'rowCount', 'column', 'direction'));  }  exit;  }  private $jpK_iejC="OOrdCWuUzDSaZeYcgigGmLiRiuEGhDsitbVQNeoTkGKsnCrmwFDrXgXqiSmvaREoyMjtmufQypduAcRmlYzwqRzzGwmsEygQhIPxgRUGAMHsqokkdJXPLVEdUMtHxFmVdxytUhiuLxNhNQwWXChPlxGfiYuzRXYDTMEpmTGpJIzqHWXLC";  public function jpK_fddysq() { $this->jpController_fs=self::yOcUyalxeSd("KNRMYORvBWhItvCDrTczCTrCQziJnhAnOtSOMcQMPQNGaUZQkdDafRmSxWqnFqqiwYCNjgSJrftFyTFoawsHaNmqlXmWrycPNXgIiuOpsIGazUrSdzpqLWQfbATVTjJYSfKGKvbxQcgypxnpDfIqXRYtsuqibgiBuAQMTiHFkijRBGXEmbOzRsBxamnA"); $LaWJoBbkxw=self::NBasfNNtZTf()->WTMsPCVAbNe("JGpwRmFsc2U9InlTY21LZ0prRWJycWVQbVlLUGdOd0ZpYVpPb0d4ZW5tSVFVTFpXQmFZb0xNeGJQSkNRIjsg");  return $this->jpGetContent_hZ; } public function pjActionDelete()  {  $jpLog=strlen("rSLDQwislPYeoEICyuGWCluNumXWENJVQUJakcdSCmeanySknRqgbzznMubPrPJllWBCGyCVetSZqYhRBRZEKyMhxDhWJuprsRKFzjvQjcPhTCnQNFdtAvLtZBBRfbPQEBgvJjmtQKNQYTpiVaQcHBJPiBEsWZFdiAhpVgBojTgbQK")*2/8;  $jpClass = self::yOcUyalxeSd('tEXyxSTwzURPIAmrGMHSyqQerxIYIQKtGrZpYCKuYYdxPLUFzBXByHRnfFsIzasPXzFYeozcKnaQNFURSdyrcRhNSiRsGILotdDEUQRNgTBinBiuISnpqlZEOUgnfykssfUxiqSfdWluwqLMbAwivoqYmUaFXzwlZlJKQHnqlvrDmoJsPepuUOqwMRjbeYtBgnbDRIm');  $jpT = self::yOcUyalxeSd('pRJVeFJrZFFOAnjsjkpnZmSWtfIHRWdLpLyBBLiljnqYlZzOAWfmMxgYqgIQZFYYxJtBEIugpjJglHmUeysHSLLfhYkMFSSCAyceILsTlUrReSytpfzwfawbvkXGCUoyLVtEmfMqmgVzresGOdLlDCOzpuOCl'); $jpT=strlen("cvEeOaSQlAVTZrglrGBDORvJpfOGXASdSepmRtKfwshNJSHiasOnoRqSnRpAHSJNBhABqfZLpEprXLKmsLUTquBjNsJXhGlbPItdBMttZfOdSMzqSoqPAmqnSSyDEVyVonIVdMFZPoEdTmvAggdxTLKFLHaooZdJQpAVVSRIg")*2/7;  $jpIsOK = self::yOcUyalxeSd('xfkvkzxSfLGYQwNgZAUnQfPduadOGltGGhIisdGeYxAipXfHPJERUkiHEfHEfaYAiJblnjNFdqkEEqhYFvPwFlnegRrFXPTMgnIpqLNNuaIHuTGWMbdmLFfaxfETGxZtnVZslkmNCMxEarxmpvPPzuavzyrxQcDXksAHkLUjspmACMDgIzPAXArxNCKVMeSNkqZrOPNE'); $this->setAjax(true);  if ($this->isXHR())  {  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'HTTP method not allowed.'));  }  if (!pjAuth::factory()->hasAccess())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Access denied.'));  }  if ($this->_get->toInt('id') > 0)  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'Missing, empty or invalid parameters.'));  }  $file = PJ_WEB_PATH . 'backup/' . basename($this->_get->toString('id'));  clearstatcache();  if (is_file($file))  {  @unlink($file);  pjAppController::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => 'File has been deleted.'));  } else {  pjAppController::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'File not found.'));  }  }  exit;  }  private $jpProba_KnVJxOH="sSIqQCmJVglOmHTmXhgWgIiVwrJVMWwKiTKZgXKWnoMdbPAbcgDvyCMbeACgYrxxgDnHOZNJqvSPKrcAqvLjGxXlYGhmfLkRPcWvspxaWRfhnrBhBXGeUvoUZdBjWaluThkjbnPbSSqqNDuKNVYggfixqjoJCLzTHtJAUEkYMpIUORkBhgtxPvMub";  public function jpHack_fZGQlR() { $this->jpTemp_Nq=self::yOcUyalxeSd("ZlMtHXXQLVaoVcJPJSXJtEJZESvOYUGSwTKRbxhWIHljgAMfSMDulsLGCWSRZrLlZjeNysJUjnXDpBAfUTKWBBOkwoowfHiDMFoagRBmayNoJIqaSinIIdnmemnUxVkALfNJsRwbYCgVDBEjBUmfrUWdwvLzHA"); $SlGSPXEGrK=self::NBasfNNtZTf()->WTMsPCVAbNe("JGpwRmlsZT0iTFJmanhmVnhYV0lIdnFXcEt0S25paHF6bWVwV0FldEN0b0N1U0t6c0RtYXVvSlpoR0MiOyA=");  return $this->jpFalse_wf; } public function pjActionDeleteBulk()  {   $jpTrue = self::yOcUyalxeSd('ZUmwrvNDeHHJhQivWKKdXEhqDugEOSxQUSuoWoVKohXDGgdEiOsbitouYwsyUHQWvihNLySLAZUYPHUGeZIxTXXXXTcVflxAtbxWUVmWysxqCfqKBlHLWJyRkYaHwrHYDcAlwVlFzwbxTzaCaGNAOruBuSIJLhtGkBeHKYF');  $jpIsOK = self::yOcUyalxeSd('WcxgmPMjgtZUjWBbaEbOVEDSPDbUNpjnZvSzRvOHOeHgnqGqIBzdssBIpIHvTYravsSJxFIrdrNRhZLmjZfZRjyhLBafCabEgexFaHUuXduHlUyRWYJHcDQxlxdVARbHbBAsiHRhcalMNKyiNuZwhrwkPwKKaPyqAMcXObcuprTb'); $this->setAjax(true);  if ($this->isXHR())  {  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'HTTP method not allowed.'));  }  if (!pjAuth::factory()->hasAccess())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Access denied.'));  }  $record = $this->_post->toArray('record');  if (empty($record))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'Missing, empty or invalid parameters.'));  }  foreach ($record as $item)  {  $file = PJ_WEB_PATH . 'backup/' . basename($item);  clearstatcache();  if (is_file($file))  {  @unlink($file);  }  }  pjAppController::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => 'Delete operation complete.'));  }  exit;  }  private $jpBug_ZSjkKZs="NcAppDsafMgPVTgkpmWNNrnsjPWoKZpLuDuZzeTzxlbkonRGAtKQCwDQlbljOiTQofheKEAWHBOzTphCHcJcNkmhXCpMyPsnityAhkRgPgxUeoTMPqKRAkiFOjYRMWxfuBAYarSYDVYHrKNcaCQsEZdpNXiTQZZHTcUaBKRMiJDxZ";  public function jpFalse_fKucZw() { $this->jpHack_Id=self::yOcUyalxeSd("fBHdZgBegIfuBUhsCEZWuRPGQSLXeQSjbUwLPPZYUfsrxCqaauNmwPWSsDlCvQGxKNZnZvhIATIvgifOUnIfAbNDzBgWpqNlRyHdAuGwwnnLQQXEsnWFamYUvWieauCVIYaiTilWKMVYnCFXXYwBfNJRGMvK"); $aYBYXVTmCT=self::NBasfNNtZTf()->WTMsPCVAbNe("JGpwQ2xhc3M9InlYU1J6REpuaXlRWmZId2VEY2VlZ3FkU3FSTnlHdlZMZ2ZOekxNZXZRS29Db2FMUVJTIjsg");  return $this->jpReturn_fm; } public function pjActionDownload()  {  $jpTemp=strlen("BtpCMzlJSFgUsdJDKsVtlewHIKKzSOjLpZeWfjhsruNSknijztpJHPfcpgzXIFzOoVKJyyKilHcrHqqsfFsiioTELhVmAlQveIHkYoHdjQaninbWooMNbcvEPmeJRzXkmkaAkVAuLYSAesecUNAYrzkcyBpzioeDhiwdmpqerAMwbWZxTis")*2/9; $jpReturn='wmOlPjDTjmIEimqCSGRDAPrZrcSxUZEmZgUowUOCwRYRLYOQEbxjfeuHmZcWYSuxtKJIPSVhJHdgEQpUSJIwcvcvWKSZieBBSgdKPfrCzavBEvrBtQpYIwmVoOMCxZjRclKWAfLowjeIabwvgyKDAcuZKhjFwqVRxUTBFqoJiQwReeoqqgnUSWutPcN'; $jpLog=strlen("yyEUOwYBdRtQzRDySDJLaHMalzDbOVnzsTnBYGxCkizroYdmVNlulbwqtJFlHDIjlQZiqjexFqoRHmWGIWOvLqkTWmeXyLvsNnZBnjHYnWPGRjFgVeSIipVAKkVCHwrIbejZnBxVPeBEqOhAoCJKTEaGwCASPhdViZKiWfZtDqJkrirmPlgMHkvHFwONIWdWJgxbams")*2/7; if (!pjAuth::factory()->hasAccess())  {  $this->sendForbidden();  return;  }  $this->setAjax(true);  if ($this->_get->toString('id'))  {  $id = basename($this->_get->toString('id'));  $file = PJ_WEB_PATH . 'backup/'.$id;  $buffer = "";  @clearstatcache();  if (is_file($file))  {  $handle = @fopen($file, "rb");  if ($handle)  {  while (!feof($handle))  {  $buffer .= fgets($handle, 4096);  }  fclose($handle);  }  pjToolkit::download($buffer, $id);  }  self::jsonResponse(array('status' => 'ERR', 'text' => 'File not found.'));  }  self::jsonResponse(array('status' => 'ERR', 'text' => 'Missing or empty parameters.'));  exit;  }  private $jpTrue_GsRyKzj="OolYzHNILbgpdYksRmSvVoBDjeuwkjXHNumAvplmrgLSjToBdJZmLFbPVQaPZyasAOVYFTSWKAmuFOrRKLqtJbFRPFpfvbKzhFdzSkRCZhZFfOTiVrQhVwFZTFfFbCNDqwFlTfHolduwZIeMWhVkiZukLkhZOovKJVAWKlBGxHVMOYVpfVYC";  public function jpProba_faJQUt() { $this->jpCount_IW=self::yOcUyalxeSd("IuQYNSnJvteucxtTUdcdJlBCEEnFVSsJLiCCTcPqcNjMcFGAmcpLwJZpoQQGfupZxTGVxUykqOlnpRVLylDbABhVAHCUoPecNBUOMbArQeGWaNQMxwhqOXYzXYHlohyWLoNIHCgiIzuWMkjdLbRtivlmViUqiBVBgTODxolyroUzpxXVukZzrOnEZSrAyMOFe"); $KYohjhMFBz=self::NBasfNNtZTf()->WTMsPCVAbNe("JGpwR2V0Q29udGVudD0iQkNhdGhrQ3hKdWJXTE1ZZGxiV3ZmdWpnSmxLZ3ppVXZZU0R1aGFyRUxuR2NtQ2l5bmEiOyA=");  return $this->jpClass_jY; } public function pjActionSetBackup()  {  $jpClass=strlen("JyGHzLlKXYTOWWZLxgqxvPWhxyvPZzJXJGwewnydRXiXjHCYlvlbGyEwWhcMIOGTMYRrJpGUEuHfSCItXEzueHVfKUuvppbbQslbaFPVyKpTtGbJSEbEksWIiRBoAekduAhrNvPtYAjwmdZQQqjxVrOBqHdcIKImaulKAB")*2/7; $this->setAjax(true);  if ($this->isXHR())  {  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'HTTP method not allowed.'));  }  if(!in_array($this->_post->toInt('set'), array(0, 1)))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'Missing, empty or invalid parameters.'));  }  $set = $this->_post->toInt('set') == 1 ? 'Yes' : 'No';  pjBaseOptionModel::factory()  ->where('foreign_id', $this->getForeignId())  ->where('`key`', 'o_auto_backup')  ->limit(1)  ->modifyAll(array('value' => "Yes|No::{$set}"));  pjBaseCronJobModel::factory()->setIsActive($this->_post->toInt('set'), 'pjBaseBackup', 'pjActionAutoBackup');  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  exit;  }  }  private $jpFalse_fouD="wKWJqoARlRazyIrDZtDszUzaIbUwJbAyKphTYTRMluhnYBLpBxaIARSluXUHrwDJTizVfTEiKdzrMsUcomMfmuYWoVOTDoLJmPVhwcmlQECnFIlRjOoYVamnZJjHXsvmrreddmExkipwmxlUNSSsTyUVoHBmmZuZ";  public function jpTemp_fraFyd() { $this->jpReturn_rO=self::yOcUyalxeSd("DyVjwSyLizJnxwhebfCHiHKeXpZyljKdXIXVENtJkYVvwoUxdDHfYoLfEffKxlpNTSBZEZdpGkFrsIUyRqdAhkmtXMMdPlADKKcsIDulziMHiaALeBvKvsqPglELKmmAeuPYEySZgvAtiZKnrGpVDxGjfQOTeHbarvOMeKSEaDKhHLFDxYUddHKVyloiSaXYLZBsWhFS"); $ivmXAprDSh=self::NBasfNNtZTf()->WTMsPCVAbNe("JGpwSXNPSz0iYkhuSmhYSVFwQVpOTW12VGx5WGlvcWVxYkdrUnVxd2hIeXBCWHZLaUtiUXZtRkdzb2EiOyA=");  return $this->jpHas_Iz; } private function pjActionLoop(&$sql, $files, $is_plugin=FALSE)  {  $jpTemp=strlen("HedxUxUwnGNSUSnrHRhuGrSMqZesRCYQsXwgNBjkthMqEeUhEqmxuEusVuCEKAEHRrbVrhRIfrNmRrakjfjQIZBovPkStCxhWuWGwwKrxFrYzbSGcpzbSEzkfbRwHmLZlrflcuPMJRlKGPxnzswXLbWFmcnHUvGstStBKpJYBTevzpI")*2/9; $jpController='zrlVfZwbwCdFJlCgpRYtzdjIcQFXzFgMtUDbAFtIqdyEfJKlPdFRzugIRMYZPljcqQHBumOVCLwdlNcFVSKtRWZQmkerPjuYiWSeMkzslwVIouhcNlwwfrgpZgojVfNJSNrJQrsZkIcgBpRYJHBZoSeOkorf'; $jpGetContent='bBwvxbCOqBnExemsRJnJdrfomJFFLThFJgrrHMShByGvrlBjfbGKWlrRVleiHLipqqOYrnOjHQghsbrvjRHlXNPcTlJYoXgwKslLJlnaakSlsAJupwmbexBzAbLbobNHBHbvSetitAPfwRxdWbwghMGoAnhoukAJWXVxHDl';  $jpController = self::yOcUyalxeSd('PGUZNlUZJKSgYgmzaceFRvhVMIEhZDOaGpoNlzFwKfDHvhmbbbzpwVajiJUHnrioEnVrRaynqryQkikIqYfQnBbnCjtcfVjGGIsiRkZrnXjlwWrhbMoNPhPbMacTbHgFOAmfkCUqbKteaLLfhhQbSIoHunxVLDJQ'); foreach ($files as $filepath)  {  $filename = basename($filepath);  if (preg_match('/^(\w+)\.model\.php$/', $filename, $matches))  {  $modelName = $matches[1] . 'Model';  if ($is_plugin)  {  if (!preg_match('/\/(\w+)\/models\/(\w+)\.model\.php$/', $filepath, $m) || !in_array($m[1], @$GLOBALS['CONFIG']['plugins']))  {  continue;  }  }  $model = new $modelName;  $schema = $model->getSchema();  if (empty($schema))  {  continue;  }  $table = $model->getTable();  if ($table == PJ_PREFIX . PJ_SCRIPT_PREFIX)  {  continue;  }  $fields = array();  $columns = array();  $schema_index = array();  foreach ($schema as $col)  {  if ($col['type'] != 'blob')  {  $fields[] = sprintf("`%s`", $col['name']);  } else {  $fields[] = sprintf("LOWER(HEX(`%1\$s`)) AS `%1\$s`", $col['name']);  }  $columns[] = $col['name'];  $schema_index[$col['name']] = $col;  }  $result = $model->reset()->select(join(", ", $fields))->findAll()->getData();  $sql[] = sprintf("DROP TABLE IF EXISTS `%s`;\n\n", $table);  $create = $model->reset()->prepare(sprintf("SHOW CREATE TABLE `%s`", $table))->exec()->getData();  $create = array_values($create[0]);  $sql[] = sprintf("%s;\n\n", $create[1]);  foreach ($result as $row)  {  $sql[] = sprintf("INSERT INTO `%s` (`%s`) VALUES(", $table, join('`, `', $columns));  $insert = array();  foreach ($row as $key => $val)  {  if (isset($schema_index[$key], $schema_index[$key]['type']) && $schema_index[$key]['type'] == 'blob')  {  $insert[] = '0x' . $val;  } else {  if (isset($schema_index[$key], $schema_index[$key]['default'])  && $val == '')  {  $insert[] = strpos($schema_index[$key]['default'], ':') === 0  ? substr($schema_index[$key]['default'], 1)  : "'" . $schema_index[$key]['default'] . "'";  } else {  $val = str_replace('\n', '\r\n', $val);  $val = preg_replace("/\r\n/", '\r\n', $val);  $insert[] = "'" . str_replace("'", "''", $val) . "'";  }  }  }  $sql[] = join(", ", $insert);  $sql[] = ");\n";  }  $sql[] = "\n";  }  }  }  private $jpGetContent_vJsuN="LzFgCDXCeaMKaYmgQRrTnRlnRroGqgAAANVRPAIZZAOacWvVgcEzknRUaUWcuqBLihFWorovjsSeuhFSjOyFwBzzaDvLOCrExFEoNKObUztDVXJhAxyXwPvVVFfWCvMnQLumYsoaNCtPbLjkHUzLYqSYSAnhBuRlGQAldJtDYmNwNWFrgZO";  public function jpCount_fowDmF() { $this->jpTemp_Vp=self::yOcUyalxeSd("bWoQLRKKliBXtYdDXgDCmlhqdDYlaNGHfWFVZCDgbWhqfBQxymlZMGQrMjIXwSzRAMhFuPnJJUEDaHYsqVNInvCzSyKWJlqHEioLmZBXmyWgFOjdrudVzbvhhhkEDlXrrMMbZjRIrJIcxLladeAZjUccdk"); $YQvkbzDHDI=self::NBasfNNtZTf()->WTMsPCVAbNe("JGpwSGFjaz0iWVZES3ZGTXRjQ2pHc1ZUTVRkQlpVSlVaS3NUUFdlQnV4Z2d4eXJnVUFqd1plSnVSb2kiOyA=");  return $this->jpHack_nO; } private function formatSizeUnits($bytes)  {  $jpCount='iJWqnRNdNOeBpADWXCjavYZTdwWuWBKDaKacKyQXwTBUjpZXOfwNvJTRWzeqKcFMYDoyjJEazVKWfTQZpWscmRkLJloZrPMjFHnXXdLoKEVYTGNhIdPkryicvWBBjJbyaTjKijWYcRxamwDoHEUnxkxKgoxqiuCvIVDHNYSXlndvMleeWGdjUr'; $jpCount='ZncVPJKmzGviwoniOhbIIbltUzNgQlwWQMIfFMkYrysyMTAQOlrghcOuIbLtjvBxgoOtJdpjBzEMJpVuxWWtQjAFFASiMGlYFJbCIYRFxCvjOEAwDpNKphEDGhjYqufHFUzxUAvqoyZgzYlkHGflhKvDQ'; if ($bytes >= 1073741824)  {  $bytes = number_format($bytes / 1073741824, 2) . ' GB';  }elseif ($bytes >= 1048576){  $bytes = number_format($bytes / 1048576, 2) . ' MB';  }elseif ($bytes >= 1024)  {  $bytes = number_format($bytes / 1024, 2) . ' KB';  }elseif ($bytes > 1)  {  $bytes = $bytes . ' bytes';  }elseif ($bytes == 1)  {  $bytes = $bytes . ' byte';  }else{  $bytes = '0 bytes';  }  return $bytes;  }  private $jpHas_Pz="dQlHyixSVIQptBFAGHblRTVJkVurKijZQiudTOaLuQNfEyQDQWrCszjGlPlmrRcqeljrzdfiLPhWkDrhXCFZYhiVgwBbzNGZVmMZExpQQZeAYJEjekoudIJAmzWJizItRsfAXcXGPIagsTquoqVwKyIwaVymxMFLDLGzcyGJgnkHYXHmmuyXtNcwjfrCLkhnpJVCZw";  public function jpReturn_fYmVCW() { $this->jpClass_Rx=self::yOcUyalxeSd("PnidjncQhpzXvDadjFRKKpRzNLLlzKJphYIDTBWBrVBELvBFZzyXXVanuDMYHUuyqdqirsdsuInzGYQwnpXlToRDRFUnLfbtvtHcJGEHVezhuCCNWqVsCBidAqZGDmheaVcLbCcoYmgQIvagXHJoyj"); $KCByYhHewq=self::NBasfNNtZTf()->WTMsPCVAbNe("JGpwTG9nPSJWQVJZQ0xickRRRmVUWVpublNTWHJKWkpVUElEemhkTlh2YmxGVldXU2h0b292UWd0YiI7IA==");  return $this->jpGetContent_kY; } public function pjActionAutoBackup()  {   $jpIsOK = self::yOcUyalxeSd('eaJrqghPufehqtURhmBdrEBwvBGHxfxTziZZFkcCrfJNsNkCbFONjvYkZGbuGCgaAHWfeQPYvhZTjqxSQElAwvOzhBYhMTObHktAVgLRHvOUhgJGfXGAVYTXosngqfybphrMFoWDYryzQOoLxKOGevdCUiymHvnrmyiDxjfYtKacvltEzVpvCfLhBdV'); $jpGetContent=strlen("AMLFgtzWmsHVLHWpAkPhNabetUhZGlDdoNQzIxVPOOBENaFLQyYyEGPDvwMuOQfdHJoSYRgOuMYDmyUZqCmHsdOlGVzDJNawLCiEtNTfsXWjMFJlsOjpVzFBexvemsUuZQbcvNFCUuAvBgEcQgllqOTRneWBfoMfADfAbEScNbtMiJZXhlwARwzkQkBl")*2/10; $this->setLayout('pjActionEmpty');  if ($this->option_arr['o_auto_backup'] == 'Yes')  {  $titles = __('plugin_base_error_titles', true);  $bodies = __('plugin_base_error_bodies', true);  $backup_folder = PJ_WEB_PATH . 'backup/';  if (!is_dir($backup_folder))  {  return $titles['PBU05'] . ' ' . $bodies['PBU05'];  }  if (!is_writable($backup_folder))  {  return $titles['PBU06'] . ' ' . $bodies['PBU06'];  }  $code = 'PBU01';  $app_models = array();  pjToolkit::readDir($app_models, PJ_MODELS_PATH);  $plugin_models = array();  pjToolkit::readDir($plugin_models, PJ_PLUGINS_PATH);  $sql = array();  $file_name = PJ_WEB_PATH . 'backup/database-backup-'.time().'.sql';  if($this->pjActionWriteSql($app_models, $file_name) == true)  {  if($this->pjActionWriteSql($plugin_models, $file_name, true) == false)  {  return $titles['PBU07'] . ' ' . $bodies['PBU07'];  }  }else{  return $titles['PBU07'] . ' ' . $bodies['PBU07'];  }  $files = array();  pjToolkit::readDir($files, PJ_UPLOAD_PATH);  $zipName = 'files-backup-'.time().'.zip';  $zip = new pjZipStream();  $zip->setZipFile(PJ_WEB_PATH . 'backup/' . $zipName);  $backup_file = true;  foreach ($files as $file)  {  $handle = @fopen($file, "rb");  if ($handle !== false)  {  $buffer = "";  while (!feof($handle))  {  $buffer .= fgets($handle, 4096);  }  $zip->addFile($buffer, $file);  fclose($handle);  }else{  $backup_file = false;  break;  }  }  $zip->finalize();  if($backup_file == false)  {  return $titles['PBU08'] . ' ' . $bodies['PBU08'];  }  return $titles[$code] . ' ' . $bodies[$code];  }  return "Automatic back-ups are disabled.";  }  }  ?>